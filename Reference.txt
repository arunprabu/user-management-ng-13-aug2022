
Building Blocks 
--
  Components
    HTML 
    CSS 
      1. Global CSS (styles.css)
      2. Comp-Specific CSS (app.comp.css, footer.comp.css, menu.comp.css )
      3. Inline CSS (TODO)
    TS 
  Directives
  
  Services
  Interfaces
  Pipes 
  Guards
  Modules

Concepts
---
  Thinking in Angular [DONE]
  Data Binding [6/6 DONE]
  Routing [DONE]
  RxJS/Observables 
  LifeCycle Hooks 
  Http calls from Angular App


Project Structure -
  Feature-wise and Building Block wise project structure - (Recommended)
---
  src/
    app/
      ...
      ...
      ...
      ...
      shared/
        components/
          header/
            ...
            ...
            ...
            ...
          footer/
            ...
            ...
          menu/
            ...
            ...
            ...
      home/
      concepts/
        components/
          ....
          ....
        directives/
        pipes/      
      users/
      about/
      





Routing 
---
  SPA Characteristics (7)
  --
    1. Page should not refresh / reload [DONE]
    2. URL should change [DONE]
    3. History should be maintained w/o page refresh [DONE]
    4. Header and Footer should be intact. Should not be loaded again n again [DONE]
    5. In between header and footer - page should be updated [DONE]
    6. Active menu should be set [TODO]
    7. Page Title should be changed [TODO]

  Step 0:
  ---
    Identify the URLs
      Home              - localhost:4200/
      Concepts          - localhost:4200/concepts
      User Management   - localhost:4200/users
      About             - localhost:4200/about

  Step 1:
  --- 
    Let's identify the components for the URLs 
      localhost:4200/           - HomeComponent
      localhost:4200/concepts   - ConceptsComponent
      localhost:4200/users      - UsersComponent
      localhost:4200/about      - AboutComponent
    

  Step 2: 
  ---
    Let's setup the URLs in menu.comp.html 

  Step 3:
  ---
    Let's create the components for the urls
      ng g c home -t -s 
      ng g c concepts -s 
      ng g c users -s 
      ng g c about -s 

  Step 4:
  --- 
    Check the app. Click the menus. URLs will not be stable. 
    Let's fix it. 

    Config the routes in app-routing.module.ts 

      // Config the routes
      const routes: Routes = [
        { path: '', component: HomeComponent},
        { path: 'concepts', component: ConceptsComponent},
        { path: 'users', component: UsersComponent },
        { path: 'about', component: AboutComponent }
      ];

  Step 5:
  ---
    Check the app. Click the menus. URLs will be stable. 
    But, the comp is not loaded in between header and footer

    Let's fix it. 

    add <router-outlet></router-outlet> in between header and footer 


  Step 6:
  --
    Check the app. Page will still refresh. Let's fix it.

    in menu.comp.html , replace all href with routerLink

----

Data Binding 
--
  TS => HTML 

  1. Interpolation
      TS => HTML 
      {{}}

  2. Property Binding 
      TS => HTML 
      []
      Learn about class bingind [ngClass]
      LEarn about style binding [ngStyle]

  3. Event Binding 
      TS <= HTML 
      ()

  4. Two Way Binding
      TS <=> HTML 
      [(ngModel)]
      Note: applicable in form elements input, textarea, select...

  5. Custom Property Binding
  6. Custom Event Binding


Cross Component Communication
--
  1. Parent to Child Component Communication
      Using Custom Property Binding

  2. Child to Parent Component Communication
      2.1 Using Custom Event Binding // sending data from child comp to parent 
      2.2 Using @ViewChild() - // TODO: accessing child comp data from parent 

  3. Any to Any Component Communication
      Using Service, RxJS/Observables, Subscription
      Prereq: Service, Dep Inj, RxJS/Observables, Subscription
      
----

Directives
--
  * Special instructions to the DOM 
  
  1. Attribute Directives 
      routerLink, routerLinkActive, routerLinkActiveOptions, ...

  2. Structural Directives
      *ngIf, *ngFor, ngSwitch




==
CRU(D) App 
--
  Add User 
    http://localhost:4200/users/add

    ng g c users/components/add-user -s 
  
  List Users 
    http://localhost:4200/users/

  User Details 
    http://localhost:4200/users/1

    ng g c users/components/user-details -s 

  Update User 
    http://localhost:4200/users/1
    
  Delete User 
    http://localhost:4200/users/1